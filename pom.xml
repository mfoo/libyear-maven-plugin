<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mfoot</groupId>
	<artifactId>libyear-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<name>libyear-maven-plugin Maven Mojo</name>
	<description>This plugin helps you see how outdated your Maven project dependencies are via the libyear dependency freshness measure.</description>
	<url>https://github.com/mfoo/libyear-maven-plugin</url>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/mfoo/libyear-maven-plugin/issues</url>
	</issueManagement>
	<inceptionYear>2023</inceptionYear>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<prerequisites>
		<maven>3.6.3</maven>
	</prerequisites>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.dependencies.version>3.8.7</maven.dependencies.version>
		<codehaus.versions.dependencies.version>2.14.2</codehaus.versions.dependencies.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven.dependencies.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>${maven.dependencies.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>${maven.dependencies.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${maven.dependencies.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-compat</artifactId>
			<version>${maven.dependencies.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo.versions</groupId>
			<artifactId>versions-common</artifactId>
			<version>${codehaus.versions.dependencies.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo.versions</groupId>
			<artifactId>versions-test</artifactId>
			<version>${codehaus.versions.dependencies.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>3.7.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.resolver</groupId>
			<artifactId>maven-resolver-api</artifactId>
			<version>1.9.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-testing</groupId>
			<artifactId>maven-plugin-testing-harness</artifactId>
			<version>3.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20220924</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.wagon</groupId>
			<artifactId>wagon-provider-api</artifactId>
			<version>3.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.aether</groupId>
			<artifactId>aether-api</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>4.11.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-jre8</artifactId>
			<version>2.35.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.1-jre</version>
		</dependency>
		<dependency>
			<!--
				Logging for this plugin uses SLF4J, but we don't want to force a logger implementation on projects using
				the plugin, so ensure this is test-scoped.
			-->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.36</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.7.0</version>
				<executions>
					<execution>
						<id>default-descriptor</id>
						<phase>process-classes</phase>
					</execution>
					<execution>
						<!-- generate help goal -->
						<id>help-goal</id>
						<goals>
							<goal>helpmojo</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-invoker-plugin</artifactId>
				<version>3.4.0</version>
				<configuration>
					<postBuildHookScript>verify</postBuildHookScript>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>install</goal>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<streamLogs>false</streamLogs>
							<debug>false</debug>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<failOnWarning>false</failOnWarning> <!-- TODO: Change to true after fixing "Unable to process LibYearMojo" error -->
					<ignoreNonCompile>true</ignoreNonCompile>
				</configuration>
				<executions>
					<execution>
						<configuration>
							<usedDependencies>
								<!-- TODO: This might not be necessary. I need to fix the "Unable to process
								LibYearMojo" in plugin output before reconsidering -->
								<usedDependency>org.json:json</usedDependency>
							</usedDependencies>
<!--							<ignoredUnusedDeclaredDependencies>-->
<!--							</ignoredUnusedDeclaredDependencies>-->
						</configuration>
						<goals>
							<goal>analyze-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>${project.groupId}</groupId>
				<artifactId>${project.artifactId}</artifactId>
				<version>${project.version}</version>
				<executions>
					<execution>
						<id>libyear-report</id>
						<goals>
							<goal>libyear-report</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.12.1</version>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-report-plugin</artifactId>
				<version>3.7.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.4.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>team</report>
							<report>dependency-info</report>
							<report>issue-management</report>
							<report>licenses</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>

